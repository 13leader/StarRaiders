}0}1}
	;
		.TITLE 'STAR RAIDERS.   VERSION 25.1  STARDATE-26-JUL-79'
	;	
	;	        GAME COMPLETE 17-JUN-79
	;
	;	        NOTES
	;	RAM	0-1FFF
	;	ROM	A0000-BFFF
	;	SPILL OVER ROM	 9800-9FFF
	;	E4770            ; PROG START
	;
	;	ALPHA CHARACTERS  IN DMA ASCII
	;
	;	*CAPS = ASCII EOR $20
	;	NUMBERS = ASCII
	;
	;	40 CHAR = $CC00
	;	20 CHAR (*CAPS, NUMBERS), = $CC00
	;	20 CHAR (CAPS, LOWR CASE), = $CE00
	;
	;
	;
	;	UNIVERSE LOOKS LIKE 	SIGN	HI BYTE	LOW BYTE
	;	-INFINITY	=	00	00	00
	;	        0	=	01	00	00
	;	+INFINITY	=	01	FF	FF
	;	       -1	=	00	FF	FF
	;
	;
	;
	;	KEYCODE IS ORED WITH $C0
	;
	;
	;
	;
	;
	;	STRRAM MEMORY DEFINED	STRRAM+		TYPE	NOTES
	;	                     	     0		OBJ0	ZYLON
	;	                     	     1		OBJ1	ZYLON
	;	                     	     2		OBJ2	PHOTON
	;	                     	     3		OBJ3	PHOTON
	;	                     	     4		MISSILE	PHOTON
	;	                     	     5-N	PLAY.	STARS
	;	                     	  N+1-M 	PLAY.	EXPLOS STARS
	;
	;
	;
	;
		*=$0062
	;	******************  POWER UP CLEARED RAM  ****************
0062	MISDIF		; MISSION DIFFICULTY
		*=*+1
0063	RESET		; ONE SHOT CONSOL KEY
		*=*+1
0064	ATRACT		; GAME OVER FLAF =FF, ATRACT MODE
		*=*+1
0065	REPMSG			; REPEAT MESSAGE BYTE
		*=*+1
0066	TIMOUT		; ATRACT MODE TIMEOUT REG
		*=*+1
}1}2}
	;	*******************************************************
0067	PAGE0
0067	PRGCST		; WAIT FOR VBLANK= 00{
		*=*+1
		**********************  TEMP REG RAM  **********************
0068	PNTR			; 2 BYTE MISC.  TEMPORARY REG POINTER
		*=*+2
006A	TEMP			; TEMPORARY REGISTER
		*=*+1
006B	TEMP1			; TEMP REG
		*=*+1
006C	TEMP2
		*=*+1
006D	TEMP3
		*=*+1
006E	TEMP4
		*=*+1
006F	NTEMP			; NMI TEMP REQ
		*=*+1

	;	*************************************************************
	;	********************  SHIP SPEED RAM  ***********************
0070	SPEED			; SPEED O CURISER
		*=*+1
0071	WARP			; SPEED DESIRED AS OPPOSED TO SPEED , THE PRESENT SPEED
		*=*+1
	;	************************************************************
	;	*******************  TIMERS RAM  ***************************
0072	TIMERX		; USED FO STAR INTENSITY
		*=*+1
0073	ETIMER			; EXPLOSION TIMEOUT
		*=*+1
0074	SECOND			; SECOND TIMEOUT
		*=*+1
0075	BSEQTM		; STARBASE SEQUENCER
		*=*+1
0076	BINTIM		; BINARY TIMER
		*=*+1
0077	BINNMI		; BINARY TIMER IN NMI
		*=*+1
0078	JMPTIM		; TIME TO JUMP RAM LOC
		*=*+1
	;	************************************************************
	;	********************  STAR POINTER RAM  ********************
0079	NSTARS	; LAST BYTE OF STAR RAM TO STORE, EITHER RMLAST OR STLAST
		*=*+1
007A	CNSTAR		; LAST BYTE OF STAR RAM TO CLEAR
		*=*+1
007B	BASFLG		; STARBASE FLAG
		*=*+1
007C	TRKFLG		; AUTOTRACKING = FF
		*=*+1
007D	SHENER		; SHIELD ENERGY 0 OR 8
		*=*+1
007E	ATENER		; ATTACK COMPUTER ENERGY
		*=*+1
007F	ENFLAG		; LS BYTE OF ENERGY , TELLS WHEN TO DEC ENERGY
		*=*+1
0080	WPENER			; WARP ENRGY DEPENDS ON WARP
}2}3}
		*=*+1
	;	************************************************************
	;	**************  MISC RAM  **********************************
0081	SPABAK			; SPACE BACKGROUND COLOR
		*=*+1
0082	PHITS			; PHOTON HIT DETECT REGS
		*=*+2
0084	PHOFLG		; ONE SHOT PHOTON
		*=*+1
0085	PHOTIM			; REPEAT TIMEOUT
		*=*+1
0086	LOKLOC			; PHOTON LOCK VECTOR PNTR
		*=*+1
0087	PHOTOG			; PHOTON TOGGLE FLAG
		*=*+1
0088	LOKWAT		; TIME BEFORE CAN LOCK AGAIN
		*=*+1
0089	LOKTAR		; INDEX OF LOCK ON TARGET
		*=*+1
008A	HITME		;  SHIP HIT FLAG
		*=*+1
008B	REDFKG		; RED ALERT FLAG
		*=*+1
	;		**************************************************
	;	**********************  GALACTIC CHART RAM  ******************
008C	GVPOS		; CRUISER VPOS ON CHART
		*=*+1
008D	GHPOS		; CRUISER HPOS ON CHART
		*=*+1
008E	HYVPOS		; CURSOR VPOS ON CHART
		*=*+1
008F	HYHPOS		; CURCOR HPOS ON CHART
		*=*+1
0090	QUADRT		; QUADRANT STAR RAIDER IS IN
		*=*+1
0091	HYPENG		; HYPERWARP ENERGY USED
		*=*+1
0092	HYPQAD			; HYPERWARP QUADRANT
		*=*+1
0093	KILBAS		; QUAD OF STARBASE, ZYLONS ARE AFTER
		*=*+1
0094	KILOCH		; KILL LOC HPOS
		*=*+1
0095	KILOCV			; KILL LOC VPOS
		*=*+1
0096	JMPPTS			; GRADIENT VALUES
		*=*+9
009F	JMPOUT		; JUMP TIMEOUT REG
		*=*+1
	;		**************************************************
	;	*******************  SCREEN MAP DRAWING RAM  ******************
00A0	HTARGT		; HORIZ TARGET POSIT
		*=*+1
00A1	VTARGT			; VERT TARGET POSIT
		*=*+1
00A2	TARPTR		; TARGET SEQUENCER
		*=*+1
00A3	LOKFLG			; COMPUTER LOCKON
		*=*+1
00A4	NUMPTS		; NUMBER OF POINTS TO DRAW
}3}4}
