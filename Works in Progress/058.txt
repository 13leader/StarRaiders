b056 20 64 b7		jsr	newstr
b059 ca `` ``		dex
b05a e0 05 ``		cpx	#objnum
b05c b0 f8 ``		bcs	keysr6
b05e 90 1b ``		bcc	keysr7		; jump
b060 `` `` ``	keysr5
b060 e0 11 ``		cpx	#$11		; toggle type ?
b062 b0 35 ``		bcs	keysr8		; no
b064 bc 18 be		ldy	toffmg-$0e,x
b067 b5 6e ``		lda	trkflg-$0e,x
b069 5d 1b be		eor	togtab-$0e,x
b06c 95 6e ``		sta	trkflg-$0e,x
b06e f0 03 ``		beq	keysr9
b070 bc 1e be		ldy	tonmsg-$0e,x
b073 `` `` ``	keysr9
b073 20 23 b2		jsr	ldmess
b076 a2 0c ``		ldx	#ch4tb3-ch4tab		; keys
b078 20 a6 b3		jsr	notint
b07b `` `` ``	keysr7		; entry point for re-loading inset  ***********
b07b a2 16 ``		ldx	#$16
b07d a4 7c ``		ldy trkflg
b07f f0 01 ``		beq	keys18
b081 e8 `` ``		inx
b082 `` `` ``	keys18
b082 8e 5a 09		stx	dcstor-2
b085 20 0d ae		jsr	clrmap
b088 a5 7e ``		lda	atener
b08a f0 b4 ``		beq	keysr3
b08c a6 d0 ``		ldx	disflg
b08e f0 06 ``		beq	keys10
b090 e0 01 ``		cpx	#$01
b092 d0 ac ``		bne	keysr3
b094 a2 2a ``		ldx	#instb1-instab
b096 `` `` ``	keys10
b096 4c 6f a7		jmp	ldinst
b099 `` `` ``	keysr8
b099 e0 11 ``		cpx	#$11		; hyperwarp ?
b09b d0 50 ``		bne	keys13
b09d a5 c0 ``		lda	hflag		; hwarp already on ?
b09f d0 5a ``		bne	keys14
b0a1 a9 7f ``		lda	#$7f
b0a3 85 c0 ``		sta	hflag
b0a5 a9 ff ``		lda	#$ff
b0a7 85 71 ``		sta	warp
b0a9 a9 1e ``		lda	#30
b0ab 85 80 ``		sta	wpener
b0ad a9 30 ``		lda	#rmlast
b0af 85 c3 ``		sta	hpntr
```` `` `` ``	;		h steering stuff
b0b1 a9 00 ``		lda	#$00
b0b3 85 c2 ``		sta	htimer
b0b5 8d 74 0a		sta	yposh+3
b0b8 8d 07 0b		sta	yposl+3
b0bb 8d 38 0b		sta	zposl+3
b0be 8d 69 0b		sta	xincre+3
b0c1 a9 01 ``		lda	#$01
b0c3 8d b0 09		sta	xsign+3
b0c6 8d e1 09		sta	ysign+3
b0c9 8d 12 0a		sta	zsign+3
b0cc 8d a5 0a		sta	zposh+3
